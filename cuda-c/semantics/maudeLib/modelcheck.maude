--- set print attribute on .
mod #MODEL-CHECK is
	including #MODEL-CHECKER .
	including #META-LEVEL .
	including C .
	
	op state : Bag -> #Model-Checker-State .
	op k2model : K -> #LTLFormula .
	op executing : -> #Prop .
	op checkTruth : Bag -> #Bool .
	
	op expAtom : #LTLFormula -> #Prop .
	
	
	op errorTerm : -> Bag .
	--- op printTerm : K -> K [strat(0) frozen] .
	--- eq printTerm(K:K) = K:K [print K:K] .
	
	eq state(
		B0:Bag
		< T > B1:Bag
			< threads > B2:Bag
				< thread > B3:Bag
					< k > Old:K </ k > 
				</ thread >
			</ threads >
		</ T >
	) LTL|= expAtom(k2model(A:K))
	=
	checkTruth(
		downTerm(
			getTermRP(
				metaRewrite(
					upModule('C, false), 
					upTerm(
						B0:Bag
						< T > B1:Bag
							--- < modelChecking > (.).K </ modelChecking > --- so equations match
							< threads > B2:Bag
								< thread > B3:Bag
									< k > '_!=_(A:K,, 'syntaxNat(# 0(.List{K}))) ~> 'debug(.List{K}) </ k >
								</ thread >
							</ threads >
						</ T >
					),
					unbounded
				)
			),
			errorTerm
		)
	) .
	
	--- red getTermRP(metaRewrite(upModule('C, false), upTerm('syntaxNat(Rat 0(.List{K}))), unbounded)) .

endm
